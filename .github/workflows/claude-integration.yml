name: Claude Integration

on:
  issue_comment:
    types: [created]
  issues:
    types: [opened, edited]

jobs:
  claude-response:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'issues' && contains(github.event.issue.body, '@claude'))

    permissions:
      issues: write
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm ci

      - name: Extract task from @claude mention
        id: extract
        env:
          EVENT_NAME: ${{ github.event_name }}
          COMMENT_BODY: ${{ github.event.comment.body }}
          ISSUE_BODY: ${{ github.event.issue.body }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          # Use environment variables to avoid shell escaping issues
          if [ "$EVENT_NAME" = "issue_comment" ]; then
            BODY="$COMMENT_BODY"
          else
            BODY="$ISSUE_BODY"
          fi

          # Extract text after @claude (handles various formats: @claude: , @claude , etc.)
          TASK=$(echo "$BODY" | sed -n 's/.*@claude[: ]*//p' | head -n 1)

          # Use multi-line output to avoid escaping issues
          {
            echo "task<<EOF"
            echo "$TASK"
            echo "EOF"
            echo "issue_number=$ISSUE_NUMBER"
          } >> "$GITHUB_OUTPUT"

      - name: Post acknowledgment
        uses: actions/github-script@v7
        with:
          script: |
            const task = process.env.TASK;
            const issueNumber = parseInt(process.env.ISSUE_NUMBER);

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: `ü§ñ Claude is processing your request...\n\n> ${task}`
            });
        env:
          TASK: ${{ steps.extract.outputs.task }}
          ISSUE_NUMBER: ${{ steps.extract.outputs.issue_number }}

      - name: Process with Claude
        id: claude
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          TASK: ${{ steps.extract.outputs.task }}
          REPO_NAME: ${{ github.repository }}
          ISSUE_NUMBER: ${{ steps.extract.outputs.issue_number }}
        run: |
          node .github/scripts/claude-processor.js

      - name: Post results
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const response = process.env.CLAUDE_RESPONSE;
            const success = process.env.CLAUDE_SUCCESS === 'true';
            const issueNumber = parseInt(process.env.ISSUE_NUMBER);

            const emoji = success ? '‚úÖ' : '‚ö†Ô∏è';
            const status = success ? 'completed' : 'encountered an issue';

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: `${emoji} Claude ${status}\n\n${response}\n\n---\n*Powered by Claude via GitHub Actions*`
            });
        env:
          CLAUDE_RESPONSE: ${{ steps.claude.outputs.response }}
          CLAUDE_SUCCESS: ${{ steps.claude.outputs.success }}
          ISSUE_NUMBER: ${{ steps.extract.outputs.issue_number }}
